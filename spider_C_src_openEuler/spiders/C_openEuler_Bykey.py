import scrapy
import pandas as pd
from ..items import SpiderCSrcOpeneulerItem
import random

# 函数：检查段落中是否包含短语中的所有单词
def contains_all_words(text, phrase):
    words = phrase.split()  # 将短语分割成单词
    return all(word in text for word in words)  # 检查每个单词是否都在文本中出现

class COpeneulerBykeySpider(scrapy.Spider):
    name = "C_openEuler_Bykey"
    allowed_domains = ["github.com"]
    #df = pd.read_csv('../openEulerRepo.csv')
    #urls = df.iloc[2:4]['repoLink'].tolist()
    #start_urls = [url+'/commits/master' for url in urls]
    agents_candidates = [
        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 "
        "(KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1",
        "Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 "
        "(KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11",
        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 "
        "(KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6",
        "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 "
        "(KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6",
        "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 "
        "(KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 "
        "(KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5",
        "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 "
        "(KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5",
        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3",
        "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3",
        "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3",
        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3",
        "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3",
        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3",
        "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3",
        "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 "
        "(KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 "
        "(KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24",
        "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 "
        "(KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"
    ]
    headers = {
        'Referer': 'https://github.com/',
        #'User-Agent': random.choice(agents_candidates),
        'Host': 'github.com'
    }
    cwe_keywords = [
    "CWE-119", "CWE-120", "CWE-121", "CWE-122", "CWE-680", "CWE-125",
    "CWE-131", "CWE-787", "CWE-170", "CWE-805", "CWE-476",
    "buffer overflow", "bufferoverflow", "overflow vulnerability",
    "memory corruption", "execution of arbitrary code", "stack-based buffer overflow",
    "heap-based buffer overflow", "write-what-where conditions"]
    #repo_commit_urls = ['https://github.com/Genymobile/scrcpy', 'https://github.com/neovim/neovim']
    #start_urls = [url + '/commits/master' for url in repo_commit_urls]
    #start_urls = ["https://gitee.com/src-openeuler/docker/commits/master"]
    filter_keywords = ['cve-', 'cwe-', 'vulne', '空指针', 'overflow', 'injection', 'security bug', 'security', '安全', '溢出',"memory corruption", "memory","execution of arbitrary code", "write-what-where conditions", "Fix BOF", 'BOF Bug', 'BOF','divide by zero', 'divide-by-zero', 'division-by-zero', 'div-by-zero', 'division by 0', 'divide by 0', 'zero divisor', '除零', '除0']  # 新增cwe-369
    cwe_keywords_119 = ["CWE-119", "CWE-120", "CWE-121", "CWE-122", "CWE-680", "CWE-125",
                        "CWE-131", "CWE-787", "CWE-170", "CWE-805", "buffer overrun", "buffer overflow",
                        "bufferoverflow", "stack overflow", "heap overflow", "overflow vulnerability",
                        "memory corruption", "execution of arbitrary code", "stack-based buffer overflow",
                        "heap-based buffer overflow", "write-what-where conditions", "缓冲区溢出", "越界写", "越界读"]  # cwe-119
    cwe_keywords_476 = ["cwe-476", "cwe476", "CWE-476", "CWE476", "null reference", "null dereference",
                        "null pointer dereference", "null pointer exception", "nullptr", "NPD", "npd", "空指针"]  # 476
    cwe_keywords_369 = ["cwe-369", "cwe369", "CWE-369", "CWE369", "divide by zero", "divide-by-zero",
                        "division-by-zero", "div-by-zero", "division by 0", "divide by 0", "zero division",
                        "zero divide", "zero divisor", "除零", "除0"]
    cwe_keywords_415 = ["CWE-415", "cwe-415", "CWE415", "cwe415", "double free", "double-free", "memory corruption",
                        "memory is freed twice", "freeing memory twice", "freeing already freed memory", "双重释放", "重复释放"]
    cwe_keywords_416 = ["CWE-416", "cwe-416", "CWE416", "cwe416", "use after free", "use-after-free", "UAF", "uaf",
                        "dangling pointer", "dangling reference", "access after free", "use freed memory", "使用已释放的内存",
                        "已释放内存使用"]
    cwe_keywords_474=["CWE-474", "CWE474", "inconsistent function implementation", "function inconsistency", "inconsistent API usage",
                      "function version discrepancy", "cross-platform function inconsistency", "dependency version conflict",
                      "compiler-dependent functionality", "runtime version issue", "library version mismatch",
                      "ambiguous function behavior", "conditional compilation issue", "platform-specific function behavior",
                      "multi-version function conflict", "deprecated function replacement", "API behavioral inconsistency", "编译依赖函数"]
    cwe_keywords_560 =["CWE-560", "CWE560", "umask", "chmod", "file permission", "umask configuration", "chmod-style argument"," 权限设置错误  "]
    cwe_keywords_685 =["CWE-685", "CWE685", "incorrect arguments", "wrong number of arguments", "missing arguments",
                       "extra arguments", "function call error"," 参数数量错误", "函数参数不足", "多余参数"]
    cwe_keywords_688 =["CWE-688", "CWE688", "incorrect variable", "wrong reference", "invalid argument",
                       "type mismatch", "incorrect function call", "variable error", "引用错误", "参数不匹配"]
    cwe_keywords_689 =["CWE-689", "CWE689", "permission race", "race condition", "resource copy",
                       "concurrency issue", "security race", "资源复制权限问题", "并发错误", "竞态条件"]
    cwe_keywords_248 =["CWE-248", "CWE248", "uncaught exception", "unhandled exception", "exception not caught",
                       "runtime exception", "未捕获的异常", "未处理的异常"]
    cwe_keywords_396 =["CWE-396", "CWE396", "generic exception catch", "catch generic", "catch all exceptions", "catch(Exception)",
                       "捕获泛型异常", "捕获所有异常"]
    cwe_keywords_397 =["CWE-397", "CWE397", "throws generic exception", "method throws exception", "throwing general exception",
                       "方法抛出泛型异常", "声明抛出异常"]
    cwe_keywords_493 =["CWE-493", "CWE493", "public variable without final", "mutable public variable", "public non-final field",
                       "公共变量未设为final", "可变的公共变量"]
    cwe_keywords_498 =["CWE-498", "CWE498", "cloneable sensitive data", "sensitive information in cloneable class",
                       "clone method exposure", "克隆类含敏感数据", "可克隆的敏感信息"]
    cwe_keywords_500 =["CWE-500", "CWE500", "public static not final", "static field without final",
                       "modifiable public static field", "公共静态字段未标记为final", "可修改的公共静态字段"]
    cwe_keywords_543 =["CWE-543", "CWE543", "singleton without synchronization", "unsynchronized singleton",
                       "singleton in multithreaded", "单例模式未同步", "多线程中的单例问题"]
    cwe_keywords_766 =["CWE-766", "CWE766", "public critical data", "exposed sensitive data", "public data exposure", "公开的敏感数据", "关键数据公开"]
    cwe_keywords_767 =["CWE-767", "CWE767", "access private via public", "public accessor for private data",
                       "exposing private fields", "通过公共方法访问私有变量", "私有数据的公开访问"]
    cwe_keywords_14 =["CWE-14", "CWE14", "compiler optimization remove", "code removal", "buffer clear code removed", "编译器移除代码",
                       "清除缓冲区代码被优化"]
    cwe_keywords_120 =["CWE-120", "CWE120", "classic buffer overflow", "buffer copy without size check", "输入大小未检查的缓冲区复制", "经典缓冲区溢出"]
    cwe_keywords_121 =["CWE-121", "CWE121", "stack overflow", "stack buffer overflow", "stack-based buffer overflow", "栈溢出", "基于栈的缓冲区溢出"]
    cwe_keywords_122 =["CWE-122", "CWE122", "heap overflow", "heap-based buffer overflow", "堆溢出", "基于堆的缓冲区溢出"]
    cwe_keywords_123 =["CWE-123", "CWE123", "write-what-where", "arbitrary memory write", "任意内存写入"]
    cwe_keywords_124 =["CWE-124", "CWE124", "buffer underflow", "buffer underwrite", "缓冲区下溢", "缓冲区下写"]
    cwe_keywords_125 =["CWE-125", "CWE125", "out-of-bounds read", "out of bounds read", "越界读取"]
    cwe_keywords_126 =["CWE-126", "CWE126", "buffer over-read", "缓冲区过度读取"]
    cwe_keywords_127 =["CWE-127", "CWE127", "buffer under-read", "缓冲区下限读取"]
    cwe_keywords_128 =["CWE-128", "CWE128", "wrap-around error", "绕回错误"]
    cwe_keywords_129 =["CWE-129", "CWE129", "Improper Validation of Array Index", "array index validation",
                       "improper index checking", "数组索引验证错误", "索引检查不当"]
    cwe_keywords_787 =["CWE-787", "CWE787", "out-of-bounds write", "out of bounds write", "buffer overflow",
                       "越界写入", "缓冲区溢出写操作", "内存写越界"]
    cwe_keywords_805 =["CWE-805", "CWE805", "incorrect length buffer access", "buffer length error", "input buffer length",
                       "错误的缓冲区长度访问", "缓冲区访问长度不正确"]
    cwe_keywords_806 =["CWE-806", "CWE806", "buffer access with source size", "source buffer size error", "使用源缓冲区大小的缓冲区访问",
                       "源大小缓冲区访问错误"]
    cwe_keywords_191 =["CWE-191", "CWE191", "integer underflow", "integer wrap", "integer wraparound", "wraparound error", "整数下溢", "绕回错误", "数值绕回"]
    cwe_keywords_401 =["CWE-401", "CWE401", "memory leak", "missing memory release", "未释放内存", "内存泄露", "有效生命周期后内存未释放"]
    cwe_keywords_690 =["CWE-690", "CWE690", "unchecked return value", "未检查的返回值", "返回值未验证导致空指针错误"]
    cwe_keywords_457 =["CWE-457", "CWE457", "uninitialized variable", "use of uninitialized variable", "未初始化的变量", "使用未初始化变量", "变量初始化错误"]
    cwe_keywords_all=[ "cve", "cwe", "vul", "security bug", "security", "vulnerability", "exploit", "漏洞", "安全" ]

    cwe_title_474=["Inconsistent Implementations"]
    cwe_title_560 =["umask chmod"]
    cwe_title_685 =["Incorrect Number"]
    cwe_title_688 =["Incorrect Variable", "Incorrect Reference"]
    cwe_title_689 =["Permission Race", "Race Condition"]
    cwe_title_248 =["Uncaught Exception"]
    cwe_title_396 =["Catch Generic Exception"]
    cwe_title_397 =["Generic Exception"]
    cwe_title_493 =["Critical Public Variable Final Modifier"]
    cwe_title_543 =["Singleton Synchronization Multithreaded"]
    cwe_title_14 =["Compiler Clear Buffers"]
    cwe_title_120 =["Classic Buffer Overflow"]
    cwe_title_121 =["Stack Buffer Overflow"]
    cwe_title_122 =["Heap Buffer Overflow"]
    cwe_title_123 =["Write-what-where Condition"]
    cwe_title_124 =["Buffer Underflow", "Buffer Underwrite"]
    cwe_title_125 =["Out-of-bounds Read", "Out of bounds Read"]
    cwe_title_126 =["Buffer Over-read"]
    cwe_title_127 =["Buffer Under-read"]
    cwe_title_128 =["Wrap-around Error"]
    cwe_title_129 =["Improper Validation of Array Index"]
    cwe_title_787 =["Out-of-bounds Write", "Out of bounds Write"]
    cwe_title_805 =["Buffer Correction", "Fix Buffer Access"]
    cwe_title_806 =["Buffer Access Source Buffer"]
    cwe_title_191 =["Integer Underflow", "Integer Wrap", "Integer Wraparound"]
    cwe_title_401 =["memory leak", "missing release memory"]
    cwe_title_690 =["Unchecked Return Value"]
    cwe_title_457 =["Uninitialized Variable"]








    # 漏洞判定: ['cve-', 'cwe-', 'vulne', 'security bug', 'security', '安全']
    # cwe476: ['空指针', '']
    # cwe119: ['overflow', '溢出', 'memory corruption', 'write-what-where conditions', 'BOF', 'Fix BOF', 'BOF Bug']
    # cwe369: ['CWE369', 'divide by zero', 'divide-by-zero', 'division-by-zero', 'div-by-zero', 'division by 0', 'divide by 0', 'zero divisor', '除零', '除0']

    cookies_me = 'user_locale=zh-CN; oschina_new_user=false; tz=Asia%2FShanghai; sensorsdata2015jssdkchannel=%7B%22prop%22%3A%7B%22_sa_channel_landing_url%22%3A%22%22%7D%7D; feature_log_id=10; slide_id=10; Serve_State=true; Hm_lvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1695870318; Hm_lvt_a708ba73ea8e3c9b858080e1f0ae9584=1696648159; Hm_lpvt_a708ba73ea8e3c9b858080e1f0ae9584=1696666562; BEC=1f1759df3ccd099821dcf0da6feb0357; Hm_lvt_24f17767262929947cc3631f99bfd274=1695094403,1696902442; yp_riddler_id=fa413286-288d-4d41-a6b3-2d0eb585ba1a; remote_way=ssh; Hm_lpvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1697008843; user_return_to_0=%2F; csrf_token=5EkIKagpyrulafNxo2e2pgrsgEYhQgWN3zXEL%2Bn3r6A28Rf7HaPhPqvcWv83NWgpOizIfyAM0J4flrmz5P767w%3D%3D; Hm_lpvt_24f17767262929947cc3631f99bfd274=1697013846; gitee_user=true; gitee-session-n=OHR2ejcwYVZvdG1xeHlQWXB6dkF4dFBYd2ZaZDI2UHVhbzloWWYxam1rS1RDWklJQ1hJeTUyZzBlTHRVNkRGQWZhb0twZFlZQWJ2YW9ua0xFZG43T2dHdDBPb1VNYStXNUJaQjRmcWtBVlFjaTBta0pkcFRBaWVVNThyL0l1S2ZKdUVvRE1nc3N2MFJYUDlmT1JyT0VhSkIrc2Exc2xTcEc0QTE4azNFd1Y1VC9GT0luN00yTjQ4Y3p4em1CY2F1M3k5dVpyK3VFUG91ZXVod01XY1lGdXlxSy9xKzNCclZkc1JVbjc3azg0d2RKazdkblJ6SXY5bG9heldRUS80NllQTkh6MlllS20wcjhGQzhZUXYwNzJ5akJtWjI5bno4YTJUQXFSeWhXVW1xTzV6ZW5QZVRTUkJ2cDVhVlIwOU92d1dPeE42SFhWQVo5MDV5Z0Q3RjJPVkVZcjdzNjR4bzVGZkFJWDdVbnR4TG90RmhVcmpXN2FSS1creEdBbjlrMHJVRFBFNGNVZzEydFJQMGNpbHVyOHFFVzJpV09mcW1DMjRuZGtVK2Naa0F4SzF1Ry9XTnZWUFd1b3FjY0VZbjYrOGJhTmFEV2x6VWpJVmxWdVV6bTZkcVRlbVRsUGlVVGxENXAxQTExVmdwd3NmeCtnNDBSMlFFYlRxY08vNUhuVmREK1VoMjdnQzhNa2k2WlBJci9KQXZuellhcUFkSzhQam1Eeng3L2VWdFkzQXNNUEJ2a2ZSbUpUQmFreW5HMTk3dXZrVmpLbk1icmptZDJXa1dnR2pZZytwZkNoMjdiOFZvQTllVEp0Tm5qMDNEVlVJNmFCYU1JRThHeGprT2xPbkNITnBRcTd3WEo2L0syVk1POUUxWDlXbXNvV0RteW94cmZXc1FUd0E9LS1iOEZJSFFLTjJZK1ZLcFNuNkw1UUhBPT0%3D--740f925da445da6ebe41498c298010cfdaad8388; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2218b1de8506c958-0857ea16558b458-26031e51-2073600-18b1de8506d3121%22%2C%22first_id%22%3A%22%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%2C%22%24latest_referrer%22%3A%22%22%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfY29va2llX2lkIjoiMThiMTc0NDZjMjdiMTktMDBhYzVhMmRlZWI4ZmU4OC0yNjAzMWU1MS0yMDczNjAwLTE4YjE3NDQ2YzI4MWExMCJ9%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%22%2C%22value%22%3A%22%22%7D%2C%22%24device_id%22%3A%2218b17446c27b19-00ac5a2deeb8fe88-26031e51-2073600-18b17446c281a10%22%7D'
    cookies_wu = 'user_locale=zh-CN; oschina_new_user=false; tz=Asia%2FShanghai; sensorsdata2015jssdkchannel=%7B%22prop%22%3A%7B%22_sa_channel_landing_url%22%3A%22%22%7D%7D; feature_log_id=10; slide_id=10; Serve_State=true; Hm_lvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1695870318; Hm_lvt_a708ba73ea8e3c9b858080e1f0ae9584=1696648159; Hm_lpvt_a708ba73ea8e3c9b858080e1f0ae9584=1696666562; BEC=1f1759df3ccd099821dcf0da6feb0357; Hm_lvt_24f17767262929947cc3631f99bfd274=1695094403,1696902442; yp_riddler_id=fa413286-288d-4d41-a6b3-2d0eb585ba1a; remote_way=ssh; Hm_lpvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1697020068; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2218b1e4f6b9aa2f-02e9a5f606e202a-26031e51-2073600-18b1e4f6b9b306a%22%2C%22first_id%22%3A%22%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E8%87%AA%E7%84%B6%E6%90%9C%E7%B4%A2%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC%22%2C%22%24latest_referrer%22%3A%22https%3A%2F%2Fwww.google.com%2F%22%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfY29va2llX2lkIjoiMThiMTc0NDZjMjdiMTktMDBhYzVhMmRlZWI4ZmU4OC0yNjAzMWU1MS0yMDczNjAwLTE4YjE3NDQ2YzI4MWExMCJ9%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%22%2C%22value%22%3A%22%22%7D%2C%22%24device_id%22%3A%2218b17446c27b19-00ac5a2deeb8fe88-26031e51-2073600-18b17446c281a10%22%7D; csrf_token=SaZv9jZUn%2F0CYXQud8qw%2BtbMklPek%2Bg2qBLm%2BtBD0L5AfwRnIU%2FlfsJ%2FbIqNGmI%2BiueX8uEJtGuZa%2FTm0jt5Mw%3D%3D; user_return_to_0=%2F; Hm_lpvt_24f17767262929947cc3631f99bfd274=1697020725; gitee_user=true; gitee-session-n=R0RRT1NuakY5RjNUZHplZVlKV2pIVXNPcFlNOWt2cFFpcThhNXVSeDVYSlkyOU56YlN3ZHZoK0FCOXVxNzRJRS9CVlRzUnRNamxTYjkvNzdVL2JnUjhjcGFXRkttWmNYMnhST1JVNlE5V2tmNzRxTmF0V0NnRFFDSlVscE9pNVIrNXI1ejNxa2EyYnJFY1IvTUZKNUt0SEJuTTc1bUFBOHNyWmVML3lTMFd6aUlUd2IzcVUzYk96cTVqNEh4NkJPSVhKNTNYTWx0Qkd4M0hZbXhRSXlJaXUrVnZOU01KRmV3ZVJuMlhGWFBiMkoyR2Z6a01LRnVtVVNOblZkM1FTblVTVlBlY1pwcFE1U1Zud0F4K1hzYVRiWERWM21mVS9tYlJYWTNFTUJBNUFHOHExcXlpVW1pUEVmNTV3THNxR2hndVlCZ3E2TERkWHZkRGFSMDl6blg0NWt5cG1kdWppdmJMR1VrZmVNUWNXaWVHeU9UMEdwUk83MWRNT09ZcVJFOWRJaUNsYk9URCtFc2plclQzSk9pVE5iV1pkazlCclVkaTdPUFVrcUpmZjVUT3NKbEM5OTZvNnV3RncrdFlaT3lJOTJJUExtdGg1eW0wbmo5ZjhVNUhoSWN0V0VTNURPYndjV1FSVE5jcTlVb0I5Rkc2V21wUWZub1hhck0vTlAzZzNkZ29mZTlLN1ZrK05rYXAwcU9GdFo0OHhkQ3FOcWlsbThZWWozd2pvN1ZYK0h2Vnk4WE4vWkhKTHpaRlZUMmUrdXhnWlFvcnVWdTBvOXlUdjlVTmRjWHRQdmV0c0FLUzJhem9NL3FWWXlTWnlhbW5EWVVyWFhqTDNHSytvdmFpU2EvemZRTDJUSjMwNml4R1FNVjlhbkFjMFlYcTJYUWVmUkhiM0RpbXM9LS13TkxtNWRVSUluUGIrVEx0SWczOTlBPT0%3D--7071b13c6f64f1f8a58d3e64d443bbcd5ee38f24'
    cookies_guo = 'user_locale=zh-CN; oschina_new_user=false; tz=Asia%2FShanghai; sensorsdata2015jssdkchannel=%7B%22prop%22%3A%7B%22_sa_channel_landing_url%22%3A%22%22%7D%7D; feature_log_id=10; slide_id=10; Serve_State=true; Hm_lvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1695870318; Hm_lvt_a708ba73ea8e3c9b858080e1f0ae9584=1696648159; Hm_lpvt_a708ba73ea8e3c9b858080e1f0ae9584=1696666562; BEC=1f1759df3ccd099821dcf0da6feb0357; Hm_lvt_24f17767262929947cc3631f99bfd274=1695094403,1696902442; yp_riddler_id=fa413286-288d-4d41-a6b3-2d0eb585ba1a; remote_way=ssh; Hm_lpvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1697020068; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2218b1e4f6b9aa2f-02e9a5f606e202a-26031e51-2073600-18b1e4f6b9b306a%22%2C%22first_id%22%3A%22%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E8%87%AA%E7%84%B6%E6%90%9C%E7%B4%A2%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC%22%2C%22%24latest_referrer%22%3A%22https%3A%2F%2Fwww.google.com%2F%22%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfY29va2llX2lkIjoiMThiMTc0NDZjMjdiMTktMDBhYzVhMmRlZWI4ZmU4OC0yNjAzMWU1MS0yMDczNjAwLTE4YjE3NDQ2YzI4MWExMCJ9%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%22%2C%22value%22%3A%22%22%7D%2C%22%24device_id%22%3A%2218b17446c27b19-00ac5a2deeb8fe88-26031e51-2073600-18b17446c281a10%22%7D; csrf_token=q6b1Fjsp4djrOGnMUpAZp8lcTMOVLge2x4KtQDN%2Bmk6xrH1Y3zj6nHILi99BPN7SQ%2BNEoBeXZKFnNB0p%2BqovIA%3D%3D; Hm_lpvt_24f17767262929947cc3631f99bfd274=1697021096; gitee-session-n=VG51bmJveXRhUnVmdXpGeVlMbEoxNDVoL0FFM2R6eW93NUg5ZDNBK3RsNzFheEwzeEd6MkxCdGhZYVcvc0pDS3IrV0hrMVZhSjV2RHBFeVVDM3pNOGUwMXVabHJ5SUxaUXpoUkF4VjdadmZLdEZyWjNmN3k2TVc4OFo2bmt2dzlHSXFrMUNzZ2NWVGZiM052NGpmYkhFWUswRWxWajlteDVnbUNSVlB2SFFpVE1VcnprakVxQ3pBcER2R2d3VlNLVG9nMmJFTVA0bXd0U0tSOE84MEgzSzluZGtBR3RKNmhMWFlZTHdjcmltbzdiTDhYZHhxOGJGU0JnenZqZEhSMmptRmk2WFZWM05mRHpHM1NzQ2xvZVhVTWJ0TmNWVldHTE5IN0lLNitBdUJ5WDdWRWNkVVdnNzBNSVFBa0xXTHBJUGoyY1krWUZmQUNJazh0QVdTV2VhTFd4b1ZidUdxZTBZTmRTTDhLalBDMUpQOUJVTmh1RmN1eWpoUWFDdFJXM3VVY2lQbStZa3FQQ1JjWXozS2RiWEVWWmJ5UWM3QVZ6Zm04NTFUN2UrRmVDZXBZOGhSMVY4M2N4TUQxTE9rUjhDR0MxOElIRmxtbGhrenVqRlNKenYvSmpPa3laa3EvOEhwYlR2Zm16NjA1NnFTWjU5TDNqdXRlWjIva21hT2s4NldVbUFJSkdCNzVmWDAzWVhpRCtib3ZOU2I4YzFZdlZpb1ZCR1djS29kNFNLakt0NFpJb1lGQjZYa0N0dTc1K2ZqVTh3NWdadldvWHM4N3ovdFdrTzlDTUovYVV5V0ZVV3BkMzBaMWovWWF3SDRoc2NiTUZXdk92elcvMFo3a21hNmdFZnk0b0FndUFZZGNGZWxyNGx2b29YSEc3M1kwalVpUUZmUGc3MGs3UUxtcW1FOWh2UzFpUEZlZHYxeXNpUHV0dExQaHFsT2xpY2VSb3RwcFVOTy9wYkFobDZvMFBteEVzT1A0RVdVWDNqS1oxempsSDBkc1BFUHY3ZFU1UFNZSS9YRnpMSVZLRXJEVEZVaDNPcU5wWmhPQ3A4L0FQTzJacTg4WmhkMlZqNUUvYzFZcHRsUEZ0L3JFKy9aTHVvTy9rcU1WcEtOcFFtTGkrcXQ5UUxkM3JyTE15azRHOW1FdnU5NlBTYlBuc1BNNXFmWWoxWHA0SzZxQzdmSERTbElab0dBYVU4aldRd3dIakdwOG5xc1JHUlNpU1FETHdmUkZ4WlZXMm5VPS0tVUxUaU9oNlVGSjcrMndJNHVvRXlpUT09--3b92eefdc87843cf892432b8bd3d92c99beb3401'
    cookies_yu = 'oschina_new_user=false; sensorsdata2015jssdkchannel=%7B%22prop%22%3A%7B%22_sa_channel_landing_url%22%3A%22%22%7D%7D; feature_log_id=10; slide_id=10; Serve_State=true; Hm_lvt_a708ba73ea8e3c9b858080e1f0ae9584=1696648159; yp_riddler_id=fa413286-288d-4d41-a6b3-2d0eb585ba1a; remote_way=ssh; BEC=1f1759df3ccd099821dcf0da6feb0357; user_locale=zh-CN; Hm_lvt_24f17767262929947cc3631f99bfd274=1695094403,1696902442,1697072252; tz=Asia%2FShanghai; Hm_lvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1695870318,1697074066; Hm_lpvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1697160080; csrf_token=KrV8sHud6sTur7V1B%2FHjjD5BSxOdVC6vooIraq4hnbvmFChSCceboTVsoycMIsIiOX4BGBZSRAdI7nkFPsu6qw%3D%3D; user_return_to_0=%2F; Hm_lpvt_24f17767262929947cc3631f99bfd274=1697163494; gitee_user=true; gitee-session-n=SlFHbTh4TFc5cVFSanpiaUwzdHVLdTl3b2hDM2cxYy9zQUpwdTNZdEdaSUlVb1p5TS9YdHJ1TUQ5dDdTcURQYWVaTDNnYkRNeENoSTdCUXFMT2J4Ky9LcTh3VXkxcFBYb2lxRzAvSDVGTWZRRTlDWFhTZGxNUXFBRytDR29qQ3NENWYxaVB2bmh5WVdZZFVNSmxsbXZoMUZ3N2YyaUN1L29mYy9JN2xvSFhncDV5YnBXVnNwWlNGcjAxRXpMNTRETURXdGE0eUhzNnNKckJ1K29xWGp6cUFrRkZCU25YaXFBeEFaTUZ2azBXSWJ6QjdsekFzbS9IZEhFRUI4N0NUdGp6N0dwL2NoUk5ROVo4aHM1MHcvS2Rhd2Y0dzdBSU9OeFRKSjBYc3k1L2wySGZqKy9JQzhJSjJJSDVnQURMNm5PdEZkWjVhUXlBMkp2QmYxVUVYZ1lLUTE5VVhzeGRGbDgvUGFrZHY3TjFOWlc1eFA3cTFLclNXRGpFcHVtN2krdm5BR3pLc25xbjlXTENIOGRTTmdObVJ1K21HYWJobjFLUGo4ZzZncStUd3lmNk5pZkZOSjgzZFJSajdnVkw1cVZSekNNR255QkRqQlNWREd5MUM5cHZURXVxcitNNWNPbGd1TnYzQ0ZzWXlwdU9nSEprRjh2c0owemZUSnhVd2dMcGFDZ3lzM2xLZzdiTlkvVTNIVWtWbnJZT2c3cEZXc2N3NEZWeUJ5RU14enFlOVdOWHNMNHZBL2hGZ3RZYXZaejV3TkJrVy9SaHZMM0E0R0ZvTW9KNXdQbHpEd0hoK2t6cTBXZHVCelpGbWdUVnZyeC9KR3p2eFhRbCtvakxiK1lMR3RwV0dZT1RtbVdPbGVDL1pWNjUxS1RYVnUvOVhTRUFodG5tR2l3c3M9LS1KUEFmbVdqRDZQSHh3UVJ6aUFleFBRPT0%3D--504fbfaf23abb41c58b60af752bbdbb0b39a839f; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2218b26d3c24119f9-035975a3fe9868-26031e51-2073600-18b26d3c242667%22%2C%22first_id%22%3A%22%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%2C%22%24latest_referrer%22%3A%22%22%2C%22%24latest_utm_source%22%3A%22gitee_search%22%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfY29va2llX2lkIjoiMThiMTc0NDZjMjdiMTktMDBhYzVhMmRlZWI4ZmU4OC0yNjAzMWU1MS0yMDczNjAwLTE4YjE3NDQ2YzI4MWExMCJ9%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%22%2C%22value%22%3A%22%22%7D%2C%22%24device_id%22%3A%2218b17446c27b19-00ac5a2deeb8fe88-26031e51-2073600-18b17446c281a10%22%7D'
    cookies_jie = 'oschina_new_user=false; sensorsdata2015jssdkchannel=%7B%22prop%22%3A%7B%22_sa_channel_landing_url%22%3A%22%22%7D%7D; feature_log_id=10; slide_id=10; Serve_State=true; Hm_lvt_a708ba73ea8e3c9b858080e1f0ae9584=1696648159; yp_riddler_id=fa413286-288d-4d41-a6b3-2d0eb585ba1a; remote_way=ssh; BEC=1f1759df3ccd099821dcf0da6feb0357; user_locale=zh-CN; Hm_lvt_24f17767262929947cc3631f99bfd274=1695094403,1696902442,1697072252; tz=Asia%2FShanghai; Hm_lvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1695870318,1697074066; Hm_lpvt_6bc840df1e0b2cbbd5d0aab3e06b2610=1697097223; csrf_token=3Q5scWvcJyM5y71PR%2B0bJiAhaAzA6ZK01iGalVzyRyGsgr6dlR7L9ImXoPrtS6WaLOdOot3O%2F%2FcUOV5e1%2FP9Dg%3D%3D; Hm_lpvt_24f17767262929947cc3631f99bfd274=1697097277; gitee-session-n=TzB3L0VzVUhTc3h2WjlYQnVLTENsbE1uVWFBWmlRcHNpTmJMdUs2L1RJUG9sMnV6azJtd0dxeGU4QldvS0UrOThzOTAzcG5XK1hTRFhtaWtZNnQ3NzYrZWk4K1hHbTd3UWM2K1QzV1ZwcDFRQ0paR1laMEFiVDl2eFJMTEUrbTBIU1NzQkxaMXZXS3ZLcXZtajVjK3EyK1AxVHpxUEFzcDJhZU9vNlVxZXdpbWRKZmpaNmtoa3VUR3RmNzN2TFpKaE5Bc3ROT0tZY01QV0tZVkNjQ1VDalRSeGhCSnEvcXU1THRHd2VnTmViSjQ0aUpQT0pIVWlzYks1RkJQZTh2TDArOVZDYlJkYzVVSGhVcm9PQ29mT3IwUHVENWdha0lhcDdCOXpMYngwcG9qVGtQZnNVaTlhZTE3WEY2NFRNL055dzQ4NnZGbitBSGRqS29iYkVGei9NdTgyTktEbTE1d1B5NHR0aktBOXdXSEl1WDZvWVJ5aEthN0plZmc4TU56d2dZeTR6TFdyMEFlb1B5UEprK1UzenZlQ1p6dUtKeEl5OEc2TkppOWdWcm4yTmlqaXNaYkViZVdWMGZCYkJxVlJBS3pwcUh5ODRCUUdnemtwWjVMc3YrUVR2U1ZPKy9YdGh3dlFIcWFxWWRIOW0ycStRak0yTGZqM3M5U1ZSOHVIdzh3cG9HVWxwTG1IK08vUXVsSmowcWtkV2RZdGdsT1YzOEdVd3p2K3BxWGN4RGU2NGZxelFBdkkxSlFqa25odVJEampvem9wVEdDaFkvUGEwVUphVTU0ZERLbW1nRGhvaFVNamJDZEJrMVlCUWROc1pkb3VDbUVGeEh2b0RUcnpLTVkwVkF4am9Ea25rdVp5RndPT0xkUmE1akx1aGIxbjZtUUtwWGQxWm96OEZrVm5TK3dma2dQMXZMSmJWNzI3bzVBeVFQSW5Wc3N3dG45MzdXNkxEdDg0TXNHTzk5RjBNaFVLbWo5dUF6eERxaWQ0WHprMVlueC9rVTFhaW41enEzT1ZnNmt3ZTJNU2hjdDVpTnE3MFhkdTN6Q0krTUlDb0c0NjI5c2Vrd0NEcmt1Vm0xemUySk1JR2dKSy9wM0psZW83YktmdWpFajNRODlKWTRNS1VBVU5kY0t1QXJhN21xWHFyWmV1QjVIcW9VVWRWV1NzVVZwTXBJMUhGRWJVVWJDV3dRcXVPbkhPem1Zai9xVlVsUzV4ODlWMUd1TXh0SndVeDVIemJRPS0teEFXbHJJbHlJT1U2QklBRzRxRHBZZz09--de3c74a883ef8c0843b93bb591596d205eb83f2e; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2218b22e15e992873-0cf6ec1fbed2d7-26031e51-2073600-18b22e15e9a2fc4%22%2C%22first_id%22%3A%22%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%2C%22%24latest_referrer%22%3A%22%22%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfY29va2llX2lkIjoiMThiMTc0NDZjMjdiMTktMDBhYzVhMmRlZWI4ZmU4OC0yNjAzMWU1MS0yMDczNjAwLTE4YjE3NDQ2YzI4MWExMCJ9%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%22%2C%22value%22%3A%22%22%7D%2C%22%24device_id%22%3A%2218b17446c27b19-00ac5a2deeb8fe88-26031e51-2073600-18b17446c281a10%22%7D'
    cookie_candidate = [{i.split("=")[0]: i.split("=")[1] for i in cook.split(";")} for cook in [cookies_yu, cookies_jie, cookies_wu, cookies_guo, cookies_me]]  #

    def __init__(self, start_url):

        self.start_url = start_url

    def start_requests(self):
        # 每次随机选一个user-agent跟我们5个人的cookies

        yield scrapy.Request(url=self.start_url, cookies=random.choice(self.cookie_candidate), headers=self.headers)


    def parse(self, response):
        #result={}!!逆天错误
        for commit in response.css('.markdown-title'):#对每个commit,提取commit的链接
            result = {}
            commit_url = response.urljoin(commit.css('a::attr(href)').get())
            title = commit.css('a::attr(title)').get()
            item = SpiderCSrcOpeneulerItem()
            #匹配标题拆分
            # 474
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_474)
            if contains_phrase:
                print("匹配到 CWE-474 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-474'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 560
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_560)
            if contains_phrase:
                print("匹配到 CWE-560 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-560'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 685
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_685)
            if contains_phrase:
                print("匹配到 CWE-685 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-685'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 688
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_688)
            if contains_phrase:
                print("匹配到 CWE-688 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-688'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 689
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_689)
            if contains_phrase:
                print("匹配到 CWE-689 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-689'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 248
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_248)
            if contains_phrase:
                print("匹配到 CWE-248 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-248'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 396
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_396)
            if contains_phrase:
                print("匹配到 CWE-396 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-396'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 397
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_397)
            if contains_phrase:
                print("匹配到 CWE-397 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-397'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 493
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_493)
            if contains_phrase:
                print("匹配到 CWE-493 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-493'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 543
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_543)
            if contains_phrase:
                print("匹配到 CWE-543 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-543'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 14
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_14)
            if contains_phrase:
                print("匹配到 CWE-14 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-14'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 120
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_120)
            if contains_phrase:
                print("匹配到 CWE-120 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-120'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 121
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_121)
            if contains_phrase:
                print("匹配到 CWE-121 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-121'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 122
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_122)
            if contains_phrase:
                print("匹配到 CWE-122 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-122'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 123
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_123)
            if contains_phrase:
                print("匹配到 CWE-123 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-123'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 124
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_124)
            if contains_phrase:
                print("匹配到 CWE-124 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-124'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 125
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_125)
            if contains_phrase:
                print("匹配到 CWE-125 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-125'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 126
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_126)
            if contains_phrase:
                print("匹配到 CWE-126 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-126'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 127
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_127)
            if contains_phrase:
                print("匹配到 CWE-127 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-127'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 128
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_128)
            if contains_phrase:
                print("匹配到 CWE-128 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-128'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 129
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_129)
            if contains_phrase:
                print("匹配到 CWE-129 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-129'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 787
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_787)
            if contains_phrase:
                print("匹配到 CWE-787 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-787'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 805
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_805)
            if contains_phrase:
                print("匹配到 CWE-805 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-805'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 806
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_806)
            if contains_phrase:
                print("匹配到 CWE-806 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-806'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 191
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_191)
            if contains_phrase:
                print("匹配到 CWE-191 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-191'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 401
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_401)
            if contains_phrase:
                print("匹配到 CWE-401 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-401'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 690
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_690)
            if contains_phrase:
                print("匹配到 CWE-690 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-690'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue
            # 457
            contains_phrase = any(contains_all_words(title, phrase) for phrase in self.cwe_title_457)
            if contains_phrase:
                print("匹配到 CWE-457 的提交信息:", title, commit_url)
                item['commit_type'] = 'CWE-457'
                item['commit_msg'] = title
                item['commit_url'] = commit_url
                yield item
                continue


            result['commit_url']=commit_url
            yield scrapy.Request(url=commit_url,cookies=random.choice(self.cookie_candidate), headers=self.headers,
                                 callback=self.parse_commit,meta={'res': result})#进入commit的链接，然后检查commit message

        # 提取下一页链接，当前页所有的commits都遍历完了，进入下一页
        next_page_link = response.xpath('//span[contains(text(), "Next")]/ancestor::a/@href').get()
        if next_page_link:
            next_page_url = response.urljoin(next_page_link)
            yield scrapy.Request(url=next_page_url, callback=self.parse)

    def parse_commit(self, response):
        ajax_res = response.meta['res']
        commit_desc = response.css('.commit-desc pre::text').get().lower()  # 将提交信息转换为小写
        item = SpiderCSrcOpeneulerItem()

        # 定义一个字典，将每个 CWE 类型与其关键字列表关联
        cwe_keywords = {
            'CWE-476': self.cwe_keywords_476,
            'CWE-119': self.cwe_keywords_119,
            'CWE-369': self.cwe_keywords_369,
            'CWE-415': self.cwe_keywords_415,
            'CWE-416': self.cwe_keywords_416,
            'CWE-474': self.cwe_keywords_474,
            'CWE-560': self.cwe_keywords_560,
            'CWE-685': self.cwe_keywords_685,
            'CWE-688': self.cwe_keywords_688,
            'CWE-689': self.cwe_keywords_689,
            'CWE-248': self.cwe_keywords_248,
            'CWE-396': self.cwe_keywords_396,
            'CWE-397': self.cwe_keywords_397,
            'CWE-493': self.cwe_keywords_493,
            'CWE-498': self.cwe_keywords_498,
            'CWE-500': self.cwe_keywords_500,
            'CWE-543': self.cwe_keywords_543,
            'CWE-766': self.cwe_keywords_766,
            'CWE-767': self.cwe_keywords_767,
            'CWE-14': self.cwe_keywords_14,
            'CWE-120': self.cwe_keywords_120,
            'CWE-121': self.cwe_keywords_121,
            'CWE-122': self.cwe_keywords_122,
            'CWE-123': self.cwe_keywords_123,
            'CWE-124': self.cwe_keywords_124,
            'CWE-125': self.cwe_keywords_125,
            'CWE-126': self.cwe_keywords_126,
            'CWE-127': self.cwe_keywords_127,
            'CWE-128': self.cwe_keywords_128,
            'CWE-129': self.cwe_keywords_129,
            'CWE-787': self.cwe_keywords_787,
            'CWE-805': self.cwe_keywords_805,
            'CWE-806': self.cwe_keywords_806,
            'CWE-191': self.cwe_keywords_191,
            'CWE-401': self.cwe_keywords_401,
            'CWE-690': self.cwe_keywords_690,
            'CWE-457': self.cwe_keywords_457,
            'CWE-all':self.cwe_keywords_all,
        }

        # 遍历字典并检查提交信息是否包含任意关键字
        for cwe_type, keywords in cwe_keywords.items():
            for keyword in keywords:
                if keyword.lower() in commit_desc:
                    print(f"匹配到 {cwe_type} 的提交信息:", commit_desc, ajax_res['commit_url'])
                    item['commit_type'] = cwe_type
                    item['commit_msg'] = commit_desc
                    item['commit_url'] = ajax_res['commit_url']
                    yield item
                    break  # 一旦匹配到关键字，立即跳出当前CWE的关键字循环

    # def parse_commit(self, response):
    #     ajax_res = response.meta['res']
    #     commit_desc = response.css('.commit-desc pre::text').get()  # 提取 <pre> 标签中的文本内容,即commit message中的内容
    #     item = SpiderCSrcOpeneulerItem()
    #     # 进行进一步的操作，比如存储数据或者输出到文件
    #     #检查关键词
    #     # 检查 cwe_keywords_476 列表
    #     for keyword in self.cwe_keywords_476:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-476 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-476'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_119 列表
    #     for keyword in self.cwe_keywords_119:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-119 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-119'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_369 列表
    #     for keyword in self.cwe_keywords_369:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-369 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-369'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_415 列表
    #     for keyword in self.cwe_keywords_415:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-415 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-415'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_416 列表
    #     for keyword in self.cwe_keywords_416:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-416 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-416'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_474 列表
    #     for keyword in self.cwe_keywords_474:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-474 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-474'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_560 列表
    #     for keyword in self.cwe_keywords_560:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-560 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-560'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_685 列表
    #     for keyword in self.cwe_keywords_685:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-685 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-685'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_688 列表
    #     for keyword in self.cwe_keywords_688:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-688 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-688'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_689 列表
    #     for keyword in self.cwe_keywords_689:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-689 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-689'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_248 列表
    #     for keyword in self.cwe_keywords_248:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-248 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-248'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_396 列表
    #     for keyword in self.cwe_keywords_396:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-396 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-396'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_397 列表
    #     for keyword in self.cwe_keywords_397:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-397 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-397'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_493 列表
    #     for keyword in self.cwe_keywords_493:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-493 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-493'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_498 列表
    #     for keyword in self.cwe_keywords_498:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-498 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-498'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_500 列表
    #     for keyword in self.cwe_keywords_500:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-500 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-500'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_543 列表
    #     for keyword in self.cwe_keywords_543:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-543 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-543'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_766 列表
    #     for keyword in self.cwe_keywords_766:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-766 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-766'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_767 列表
    #     for keyword in self.cwe_keywords_767:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-767 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-767'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_14 列表
    #     for keyword in self.cwe_keywords_14:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-14 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-14'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_120 列表
    #     for keyword in self.cwe_keywords_120:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-120 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-120'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_121 列表
    #     for keyword in self.cwe_keywords_121:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-121 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-121'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_122 列表
    #     for keyword in self.cwe_keywords_122:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-122 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-122'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_123 列表
    #     for keyword in self.cwe_keywords_123:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-123 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-123'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_124 列表
    #     for keyword in self.cwe_keywords_124:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-124 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-124'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_125 列表
    #     for keyword in self.cwe_keywords_125:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-125 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-125'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_126 列表
    #     for keyword in self.cwe_keywords_126:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-126 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-126'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_127 列表
    #     for keyword in self.cwe_keywords_127:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-127 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-127'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_128 列表
    #     for keyword in self.cwe_keywords_128:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-128 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-128'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_129 列表
    #     for keyword in self.cwe_keywords_129:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-129 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-129'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_787 列表
    #     for keyword in self.cwe_keywords_787:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-787 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-787'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_805 列表
    #     for keyword in self.cwe_keywords_805:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-805 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-805'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_806 列表
    #     for keyword in self.cwe_keywords_806:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-806 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-806'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_191 列表
    #     for keyword in self.cwe_keywords_191:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-191 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-191'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_401 列表
    #     for keyword in self.cwe_keywords_401:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-401 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-401'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #
    #     # 检查 cwe_keywords_690 列表
    #     for keyword in self.cwe_keywords_690:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-690 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-690'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
    #     # 检查 cwe_keywords_457 列表
    #     for keyword in self.cwe_keywords_457:
    #         if keyword.lower() in commit_desc.lower():
    #             print("匹配到 CWE-457 的提交信息:", commit_desc, ajax_res['commit_url'])
    #             item['commit_type'] = 'CWE-457'
    #             item['commit_msg'] = commit_desc
    #             item['commit_url'] = ajax_res['commit_url']
    #             yield item
